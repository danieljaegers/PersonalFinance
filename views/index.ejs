<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Personal Finance Manager</title>
<link rel="stylesheet" href="https://threads.plaid.com/threads.css">

<link rel="stylesheet" type="text/css" href="style.css">
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <main class="main">
    <div class="grid">
      <div class="grid__column grid__column--is-twelve-columns">
        <div id="banner" class="everpresent-content">
          <h1 class="everpresent-content__heading">Personal Finance Manager</h1>
          <div id="chartContainer" style="height: 370px; width: 100%;"></div>
        </div>

        <div id="container" class="initial-view">
          <p class="initial-view__description">
            Click the button below to open a list of Institutions. After you select one, youâ€™ll be guided through an authentication process. Upon completion, a public_token will be passed back to the server and exchanged for access_token.
          </p>

          <button id="link-btn" class="button button--is-primary">Connect with Plaid</button>
        </div>

        <div id="app" class="connected-view">
          <br>
          <p>Now that you have an access_token you can make all of the following API requests:</p>

          <div class="box">
            <h3 class="box__heading">Products</h3>

            <!--Transactions -->
            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Transactions</div>
                <div class="item-data-row__endpoint">/transactions/get</div>
                <div class="item-data-row__description">Retrieve transactions for credit and depository accounts.</div>
              </div>
              <div class="item-data-row__right">
                <button id="get-transactions-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>
              <div class="item-data-row__response">
                <table><tbody id="get-transactions-data"></tbody></table>
              </div>
            </div>

            <!-- Balance -->
            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Balance</div>
                <div class="item-data-row__endpoint">/accounts/balance/get</div>
                <div class="item-data-row__description">Check balances in real time to prevent non-sufficient funds fees.</div>
              </div>
              <div class="item-data-row__right">
                <button id="get-balance-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>
              <div class="item-data-row__response">
                <table><tbody id="get-balance-data"></tbody></table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
  <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
  <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
  <script>
  (function($) {
    var products = '<%= PLAID_PRODUCTS %>'.split(',');

    var handler = Plaid.create({
      apiVersion: 'v2',
      clientName: 'Plaid Quickstart',
      env: '<%= PLAID_ENV %>',
      product: products,
      key: '<%= PLAID_PUBLIC_KEY %>',
      // webhook: 'https://your-domain.tld/plaid-webhook',
      onSuccess: function(public_token) {
        $.post('/get_access_token', {
          public_token: public_token
        }, function(data) {
          $('#container').fadeOut('fast', function() {
            $('#item_id').text(data.item_id);
            $('#access_token').text(data.access_token);
            $('#intro').hide();
            $('#app, #steps').fadeIn('slow');
          });
        });
      },
    });
    var accessToken = qs('access_token');
    if (accessToken != null && accessToken != '') {
      $.post('/set_access_token', {
        access_token: accessToken
      }, function(data) {
        $('#container').fadeOut('fast', function() {
          $('#item_id').text(data.item_id);
          $('#access_token').text(accessToken);
          $('#intro').hide();
          $('#app, #steps').fadeIn('slow');
        });
      });
    }

    $('#link-btn').on('click', function(e) {
      handler.open();
    });

    $('#get-accounts-btn').on('click', function(e) {
      $.get('/accounts', function(data) {
        $('#get-accounts-data').slideUp(function() {
          var html = '<tr><td><strong>Name</strong></td><td><strong>Balances</strong></td><td><strong>Subtype</strong></td><td><strong>Mask</strong></td></tr>';
          data.accounts.accounts.forEach(function(account, idx) {
            html += '<tr>';
            html += '<td>' + account.name + '</td>';
            html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
            html += '<td>' + account.subtype + '</td>';
            html += '<td>' + account.mask + '</td>';
            html += '</tr>';
          });

          $(this).html(html).slideDown();
        });
      });
    });

    $('#get-transactions-btn').on('click', function(e) {
      $.get('/transactions', function(data) {
        if (data.error != null && data.error.error_code != null) {
          // Format the error
          var errorHtml = '<div class="inner"><p>' +
           '<strong>' + data.error.error_code + ':</strong> ' +
           (data.error.display_message == null ? data.error.error_message : data.error.display_message)  + '</p></div>';

          if (data.error.error_code === 'PRODUCT_NOT_READY') {
            // Add additional context for `PRODUCT_NOT_READY` errors
            errorHtml += '<div class="inner"><p>Note: The PRODUCT_NOT_READY ' +
             'error is returned when a request to retrieve Transaction data ' +
             'is made before Plaid finishes the <a href="https://plaid.com/' +
             'docs/quickstart/#transaction-data-with-webhooks">initial ' +
             'transaction pull.</a></p></div>';
          }
          // Render the error
          $('#get-transactions-data').slideUp(function() {
            $(this).slideUp(function() {
              $(this).html(errorHtml).slideDown();
            });
          });
        } else {
          $('#get-transactions-data').slideUp(function() {
            var html = '<tr><td><strong>Name</strong></td><td><strong>Amount</strong></td><td><strong>Date</strong></td></tr>';
            data.transactions.transactions.forEach(function(txn, idx) {
              html += '<tr>';
              html += '<td>' + txn.name + '</td>';
              html += '<td>$' + txn.amount + '</td>';
              html += '<td>' + txn.date + '</td>';
              html += '</tr>';
            });

            $(this).slideUp(function() {
              $(this).html(html).slideDown();
            });
          });
        }
      });
    });

    $('#get-balance-btn').on('click', function(e) {
      $.get('/balance', function(data) {
        $('#get-balance-data').slideUp(function() {
          var balanceData = data.balance;
          var html = '<tr><td><strong>Name</strong></td><td><strong>Balance</strong></td><td><strong>Subtype</strong></td><td><strong>Mask</strong></td></tr>';
          balanceData.accounts.forEach(function(account, idx) {
            html += '<tr>';
            html += '<td>' + account.name + '</td>';
            html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>'
            html += '<td>' + account.subtype + '</td>';
            html += '<td>' + account.mask + '</td>';
            html += '</tr>';
          });

          $(this).html(html).slideDown();
        });
      });
    });

    // Assets Doughnut Chart
    $.get('/balanceForAllAssets', function(data) {
      var balanceData = data.balance;
      var balanceArray = {};
      balanceData.accounts.forEach(function(account, idx) {
        balanceArray[account.name] = account.balances.current;
      });

      var chart = new CanvasJS.Chart("chartContainer", {
      	animationEnabled: true,
      	title:{
      		text: "Assets",
      		horizontalAlign: "left"
      	},
      	data: [{
      		type: "doughnut",
      		startAngle: 60,
      		indexLabelFontSize: 17,
      		indexLabel: "{label} - #percent%",
      		toolTipContent: "<b>{label}:</b> {y} (#percent%)",
      		dataPoints:
          [
      			{ y: balanceArray['CHECKING - 122135187'], label: 'Central Bank Checking' },
      			{ y: balanceArray['SAVINGS - 380042053'], label: 'Central Bank Savings' }
      		]
      	}]
      });

      chart.render();
    });





  })(jQuery);

function qs(key) {
    key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx meta chars
    var match = location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"));
    return match && decodeURIComponent(match[1].replace(/\+/g, " "));
}
  </script>
</body>
</html>
